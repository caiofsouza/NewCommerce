{
  "name": "grunt-contrib-csslint",
  "description": "Lint CSS files",
  "version": "1.0.0",
  "author": {
    "name": "Grunt Team",
    "url": "http://gruntjs.com/"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/gruntjs/grunt-contrib-csslint"
  },
  "license": "MIT",
  "engines": {
    "node": ">=0.10.0"
  },
  "main": "tasks/csslint.js",
  "scripts": {
    "test": "grunt test --force"
  },
  "dependencies": {
    "chalk": "^1.0.0",
    "csslint": "^0.10.0",
    "lodash": "^3.8.0",
    "strip-json-comments": "^1.0.2"
  },
  "devDependencies": {
    "grunt": "^0.4.5",
    "grunt-cli": "^0.1.13",
    "grunt-contrib-clean": "^0.6.0",
    "grunt-contrib-internal": "^0.4.12",
    "grunt-contrib-jshint": "^0.11.2",
    "grunt-contrib-nodeunit": "^0.4.1"
  },
  "keywords": [
    "gruntplugin",
    "css",
    "lint",
    "csslint"
  ],
  "files": [
    "tasks"
  ],
  "readme": "# grunt-contrib-csslint v1.0.0 [![Build Status: Linux](https://travis-ci.org/gruntjs/grunt-contrib-csslint.svg?branch=master)](https://travis-ci.org/gruntjs/grunt-contrib-csslint)\n\n> Lint CSS files\n\n\n\n## Getting Started\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-contrib-csslint --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-contrib-csslint');\n```\n\n\n\n\n## Csslint task\n_Run this task with the `grunt csslint` command._\n\n\n### Options\n\nAny specified option will be passed through directly to [csslint](http://csslint.net/), thus you can specify any option that csslint supports. The csslint API is a bit awkward: For each rule, a value of `false` ignores the rule, a value of `2` will set it to become an error. Otherwise all rules are considered warnings.\n\nFor the current csslint version, these rules are available:\n\n- [important](https://github.com/CSSLint/csslint/wiki/Disallow-%21important)\n- [adjoining-classes](https://github.com/CSSLint/csslint/wiki/Disallow-adjoining-classes)\n- [known-properties](https://github.com/CSSLint/csslint/wiki/Require-use-of-known-properties)\n- [box-sizing](https://github.com/CSSLint/csslint/wiki/Disallow-box-sizing)\n- [box-model](https://github.com/CSSLint/csslint/wiki/Beware-of-box-model-size)\n- [overqualified-elements](https://github.com/CSSLint/csslint/wiki/Disallow-overqualified-elements)\n- [display-property-grouping](https://github.com/CSSLint/csslint/wiki/Require-properties-appropriate-for-display)\n- [bulletproof-font-face](https://github.com/CSSLint/csslint/wiki/Bulletproof-font-face)\n- [compatible-vendor-prefixes](https://github.com/CSSLint/csslint/wiki/Require-compatible-vendor-prefixes)\n- [regex-selectors](https://github.com/CSSLint/csslint/wiki/Disallow-selectors-that-look-like-regular-expressions)\n- errors\n- [duplicate-background-images](https://github.com/CSSLint/csslint/wiki/Disallow-duplicate-background-images)\n- [duplicate-properties](https://github.com/CSSLint/csslint/wiki/Disallow-duplicate-properties)\n- [empty-rules](https://github.com/CSSLint/csslint/wiki/Disallow-empty-rules)\n- selector-max-approaching\n- [gradients](https://github.com/CSSLint/csslint/wiki/Require-all-gradient-definitions)\n- [fallback-colors](https://github.com/CSSLint/csslint/wiki/Require-fallback-colors)\n- [font-sizes](https://github.com/CSSLint/csslint/wiki/Don%27t-use-too-many-font-size-declarations)\n- [font-faces](https://github.com/CSSLint/csslint/wiki/Don%27t-use-too-many-web-fonts)\n- [floats](https://github.com/CSSLint/csslint/wiki/Disallow-too-many-floats)\n- [star-property-hack](https://github.com/CSSLint/csslint/wiki/Disallow-star-hack)\n- [outline-none](https://github.com/CSSLint/csslint/wiki/Disallow-outline%3Anone)\n- [import](https://github.com/CSSLint/csslint/wiki/Disallow-%40import)\n- [ids](https://github.com/CSSLint/csslint/wiki/Disallow-IDs-in-selectors)\n- [underscore-property-hack](https://github.com/CSSLint/csslint/wiki/Disallow-underscore-hack)\n- rules-count\n- [qualified-headings](https://github.com/CSSLint/csslint/wiki/Disallow-qualified-headings)\n- selector-max\n- [shorthand](https://github.com/CSSLint/csslint/wiki/Require-shorthand-properties)\n- [text-indent](https://github.com/CSSLint/csslint/wiki/Disallow-negative-text-indent)\n- [unique-headings](https://github.com/CSSLint/csslint/wiki/Headings-should-only-be-defined-once)\n- [universal-selector](https://github.com/CSSLint/csslint/wiki/Disallow-universal-selector)\n- [unqualified-attributes](https://github.com/CSSLint/csslint/wiki/Disallow-unqualified-attribute-selectors)\n- [vendor-prefix](https://github.com/CSSLint/csslint/wiki/Require-standard-property-with-vendor-prefix)\n- [zero-units](https://github.com/CSSLint/csslint/wiki/Disallow-units-for-zero-values)\n\nFor an explanation of those rules, [check the csslint wiki](https://github.com/stubbornella/csslint/wiki/Rules).\n\n*Side note: To update this list, run this:*\n\n```bash\nnode -e \"require('csslint').CSSLint.getRules().forEach(function(x) { console.log(x.id) })\"\n```\n\nA few additional options are supported:\n\n\n#### csslintrc\n\nType: `string`  \nDefault: `null`\n\nIf this filename is specified, options and globals defined therein will be used. Task and target options override the options within the `.csslintrc` file. It should be a JSON file, but it supports comments:\n\n```json\n{\n  // unicorns\n  \"qualified-headings\": true,\n  \"unique-headings\": true,\n  \"known-properties\": false\n}\n```\n\n#### formatters\n\nType: `array`  \nDefault: `null`\n\nIf the formatters options is specified, the grunt csslint task is able to use the\nall formatters provided by csslint.\n\nFor the current csslint version, the following formatters are included out of the box:\n\n- `text`\n- `compact`\n- `lint-xml`\n- `csslint-xml`\n- `checkstyle-xml`\n- `junit-xml`\n\nFor an explanation of those formatters, [check the csslint wiki](https://github.com/stubbornella/csslint/wiki/Command-line-interface), section Options/--format.\n\nYou are also able to supply your own custom formatter, such as [csslint-stylish](https://www.npmjs.com/package/csslint-stylish). Note that you have to provide the complete module, not just the id. See [example](#providing-a-custom-formatter).\n\n#### absoluteFilePathsForFormatters\n\nType: `boolean`  \nDefault: `false`\n\nIf the `absoluteFilePathsForFormatters` option is specified and set to `true`, the file names in the generated reports are absolute.\n\n#### quiet\n\nType: `boolean`  \nDefault: `false`\n\nOnly output errors.\n\n#### quiet_all\n\nType: `boolean`  \nDefault: `false`\n\nOutputs without errors and warnings.\n\n### Usage Examples\n\n```js\ncsslint: {\n  strict: {\n    options: {\n      import: 2\n    },\n    src: ['path/to/**/*.css']\n  },\n  lax: {\n    options: {\n      import: false\n    },\n    src: ['path/to/**/*.css']\n  }\n}\n```\n\n#### Loading rules from an external file\n\n```js\ncsslint: {\n  options: {\n    csslintrc: '.csslintrc'\n  },\n  strict: {\n    options: {\n      import: 2\n    },\n    src: ['path/to/**/*.css']\n  },\n  lax: {\n    options: {\n      import: false\n    },\n    src: ['path/to/**/*.css']\n  }\n}\n```\n\n#### Specifiying output formatters\n\n```js\ncsslint: {\n  options: {\n    csslintrc: '.csslintrc',\n    formatters: [\n      {id: 'junit-xml', dest: 'report/csslint_junit.xml'},\n      {id: 'csslint-xml', dest: 'report/csslint.xml'}\n    ]\n  },\n  strict: {\n    options: {\n      import: 2\n    },\n    src: ['path/to/**/*.css']\n  }\n}\n```\n\n#### Providing a custom formatter\n\n```js\ncsslint: {\n  options: {\n    csslintrc: '.csslintrc',\n    formatters: [\n      {id: require('csslint-stylish'), dest: 'report/csslint_stylish.xml'}\n    ]\n  },\n  strict: {\n    options: {\n      import: 2\n    },\n    src: ['path/to/**/*.css']\n  }\n}\n```\n\n#### Using absolute file paths in the output formatters\n\n```js\ncsslint: {\n  options: {\n    absoluteFilePathsForFormatters: true,\n    formatters: [\n      {id: 'junit-xml', dest: 'report/csslint_junit.xml'},\n      {id: 'csslint-xml', dest: 'report/csslint.xml'}\n    ]\n  }\n}\n```\n\n\n## Release History\n\n * 2016-03-04   v1.0.0   Point main to task and remove peerDeps. Updates to docs.\n * 2015-07-18   v0.5.0   Add ability to register custom formatters.\n * 2015-01-18   v0.4.0   The `.csslintrc` file can now contain comments.\n * 2014-09-07   v0.3.1   Show affected browsers in errors and warnings.\n * 2014-09-07   v0.3.0   CSSLint \"warnings\" no longer fail build. Updated dependencies.\n * 2013-12-02   v0.2.0   Bump to csslint 0.10.0\n * 2013-04-02   v0.1.2   Allow absolute filepaths in reports.\n * 2013-03-14   v0.1.1   Support formatters Support .csslintrc\n * 2013-03-07   v0.1.0   Initial release.\n\n---\n\nTask submitted by [Jörn Zaefferer](http://bassistance.de)\n\n*This file was generated on Fri Mar 04 2016 16:53:29.*\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/gruntjs/grunt-contrib-csslint/issues"
  },
  "_id": "grunt-contrib-csslint@1.0.0",
  "dist": {
    "shasum": "fd0af4ba7175cccba0a5b0fa6d423af85981f414"
  },
  "_from": "grunt-contrib-csslint@^1.0.0",
  "_resolved": "https://registry.npmjs.org/grunt-contrib-csslint/-/grunt-contrib-csslint-1.0.0.tgz"
}
